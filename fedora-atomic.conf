# PRODUCT INFO
#skip_phases= ["pkgset", "gather", "createrepo", "buildinstall"]
release_name = 'f26-updates-testing'
release_short = 'f26-updates-testing'
release_version = '26'
release_is_layered = False
# GENERAL SETTINGS
bootable = True
buildinstall_method = 'lorax'
lorax_options = [
  ('^.*$', {
     'x86_64': {
         'nomacboot': True
     }
     '*': {
         'noupgrade': True
     }
  })
]
comps_file = 'comps-f26.xml' #{
#    'scm': 'git',
#    'repo': 'git://git.fedorahosted.org/git/comps.git',
#    'branch': None, # defaults to cvs/HEAD or git/master
#    'file': 'comps-f23.xml',
#}
variants_file='variants-fedora.xml'
sigkeys = ['64DAB85D', None] # None = unsigned
# limit tree architectures
# if undefined, all architectures from variants.xml will be included
tree_arches = ['x86_64']
# limit tree variants
# if undefined, all variants from variants.xml will be included
#tree_variants = ['Everything', 'Atomic', 'Cloud', 'CloudImages']
#tree_variants = ['Everything', 'Atomic']
tree_variants = ['Everything', 'Atomic']
hashed_directories = True
# RUNROOT settings
runroot = True
#runroot_channel = 'fedora_compose'
runroot_channel = 'compose'
runroot_tag = 'f26-build'
# PKGSET
pkgset_source = 'koji' # koji, repos
pkgset_koji_tag = 'f26-updates-testing'
#pkgset_koji_tag = 'f26-atomic'
pkgset_koji_inherit = True
filter_system_release_packages = False
# GATHER
gather_source = 'comps'
gather_method = 'deps'
check_deps = False
greedy_method = 'build'
# fomat: [(variant_uid_regex, {arch|*: [repos]})]
# gather_lookaside_repos = []
# GATHER - JSON
# format: {variant_uid: {arch: package: [arch1, arch2, None (for any arch)]}}
#gather_source_mapping = '/path/to/mapping.json'
# CREATEREPO
createrepo_c = True
createrepo_checksum = 'sha256'
# CHECKSUMS
media_checksums = ['sha256']
media_checksum_one_file = True
media_checksum_base_filename = 'Fedora-%(variant)s-%(version)s-%(date)s.%(respin)s-%(arch)s'
#jigdo
create_jigdo = False
#extra_packages = [
#    '/mnt/packages/foo*',
#]
# fomat: [(variant_uid_regex, {arch|*: [packages]})]
additional_packages = [
    ('.*', {
        '*': [
            'kernel.*',
            'dracut.*',
            'autocorr-.*',
            'eclipse-nls-.*',
            'hunspell-.*',
            'hyphen-.*',
            'calligra-l10n-.*',
            'kde-l10n-.*',
            'libreoffice-langpack-.*',
            'man-pages-.*',
            'mythes-.*',
        ],
    }),
    ('^Everything$', {
        '*': [
            '*',
        ],
    }),
    ('^Server$', {
        '*': [
        ],
    }),
    ('^Workstation$', {
        '*': [
        ],
    }),
    ('^Cloud$', {
        '*': [
        ],
    }),
]
multilib = [
    ('^Everything$', {
        'x86_64': ['devel', 'runtime'],
         's390x': ['devel', 'runtime']
    })
]
filter_packages = [
    ('(Workstation|Server|Cloud)$', {
        '*': [
        '^kernel.*debug.*',
        '^kernel-kdump.*',
        '^kernel-tools.*',
        '^syslog-ng.*',
        '^astronomy-bookmarks',
        '^generic.*',
        '^GConf2-dbus.*',
        '^bluez-gnome',
        #Periods cause problems in paterns, so replace with *s
        '^java-1.8.0-openjdk',
        '^community-mysql.*',
        '^jruby.*',
        '^gimp-help-.*',
        ]
    }),
]
# format: {arch|*: [packages]}
multilib_blacklist = {
    '*': ['kernel*', 'kernel-PAE*', 'kernel*debug*',
        'dmraid-devel', 'kdeutils-devel', 'mkinitrd-devel',
        'java-1.5.0-gcj-devel', 'java-1.7.0-icedtea-devel',
        'php-devel', 'java-1.6.0-openjdk-devel',
        'java-1.7.0-openjdk-devel', 'java-1.8.0-openjdk-devel',
        'httpd-devel', 'tomcat-native', 'php*', 'httpd',
        'krb5-server', 'krb5-server-ldap', 'mod_*', 'ghc-*'
    ],
}
# format: {arch|*: [packages]}
multilib_whitelist = {
    '*': ['libgnat', 'wine*', 'lmms-vst', 'nspluginwrapper',
        'libflashsupport', 'valgrind', 'perl-libs', 'redhat-lsb',
        'yaboot', 'syslinux-extlinux-nonlinux', 'syslinux-nonlinux',
        'syslinux-tftpboot', 'nosync', '*-static'
    ],
}
createiso_skip = [
        ('^Workstation$', {
            '*': True,
            'src': True
        }),
        ('^Server$', {
            'src': True
        }),
        ('^Cloud$', {
            '*': True,
            'src': True
        }),
        ('^Everything$', {
            '*': True,
            'src': True
        }),
    ]
# fomat: [(variant_uid_regex, {arch|*: [scm_dicts]})]
#extra_files = [
#    ('^(Server|Workstation|Cloud)$', {
#        '*': [
#            {
#                'scm': 'rpm',
#                'repo': 'fedora-release-%(variant_id_lower)s',
#                'branch': None,
#                'file': [
#                    '/etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-release',
#                ],
#                'target': '',
#            },
#        ],
#    }),
#]
# Image name respecting Fedora's image naming policy
image_name_format = 'Fedora-%(variant)s-%(disc_type)s-%(arch)s-%(version)s-%(date)s.%(respin)s.iso'
# # Use the same format for volume id
image_volid_formats = [
     'Fedora-%(variant)s-%(disc_type)s-%(arch)s-%(version)s'
     ]
# No special handling for layered products, use same format as for regular images
image_volid_layered_product_formats = []
# Replace 'Cloud' with 'C' in volume id etc.
volume_id_substitutions = {
         'Atomic': 'AH',
        'Rawhide': 'rawh',
         'Images': 'img',
    'MATE_Compiz': 'MATE',
       'Security': 'Sec',
 'Electronic_Lab': 'Elec',
       'Robotics': 'Robo',
 'Scientific_KDE': 'SciK',
  'Astronomy_KDE': 'AstK',
   'Design_suite': 'Dsgn',
          'Games': 'Game',
        'Jam_KDE': 'Jam',
    'Workstation': 'WS',
     'Everything': 'E',
         'Server': 'S',
          'Cloud': 'C',
          'Alpha': 'A',
           'Beta': 'B',
             'TC': 'T',
}
disc_types = {
    'boot': 'netinst',
    'live': 'Live',
}
translate_paths = [
   ('/mnt/koji/compose/', 'http://kojipkgs.stg.fedoraproject.org/compose/'),
]
########image_build = {
########    '^CloudImages$': [
########	{
########	    'image-build': {
########		    'format': [('qcow2','qcow2'), ('raw-xz','raw.xz')]
########		    'name': 'Fedora-Atomic',
########		    'target': 'f26',
########		    'version': '26',
########		    'release': None,
########		    'ksurl': 'git+https://pagure.io/fedora-kickstarts.git?#origin/f26',
########		    'kickstart': 'fedora-atomic.ks',
########		    'distro': 'Fedora-20',
########		    'disk_size': 6,
########		    'arches': ['x86_64'],
########		    'install_tree_from': 'Everything',
########		    #'install_tree_from': "https://kojipkgs.fedoraproject.org/pub/fedora/linux/releases/26/Everything/$arch/os/",
########		    'subvariant': 'Atomic'
########		     }
########	},
########	{
########	    'image-build': {
########		    'format': [('vagrant-libvirt','vagrant-libvirt.box'), ('vagrant-virtualbox','vagrant-virtualbox.box')]
########		    'name': 'Fedora-Atomic-Vagrant',
########		    'target': 'f26',
########		    'version': '26',
########		    'release': None,
########		    'ksurl': 'git+https://pagure.io/fedora-kickstarts.git?#origin/f26',
########		    'kickstart': 'fedora-atomic-vagrant.ks',
########		    'distro': 'Fedora-20',
########		    'disk_size': 40,
########		    'arches': ['x86_64'],
########		    'install_tree_from': 'Everything',
########		    #'install_tree_from': "https://kojipkgs.fedoraproject.org/pub/fedora/linux/releases/26/Everything/$arch/os/",
########		    'subvariant': 'Atomic'
########		     },
########	    'factory-parameters': {
########		    'vagrant_sync_directory': '/home/vagrant/sync',
########	    }
########	}
########	],
########}

########ostree = [
########    ("^Atomic$", {
########	"x86_64": {
########	    "version": "!OSTREE_VERSION_FROM_LABEL_DATE_TYPE_RESPIN",
########	    "treefile": "fedora-atomic-host.json",
########	    "config_url": "https://pagure.io/fedora-atomic.git",
########	    "config_branch": "f26",
########	    "repo": "Everything",
########	    #"source_repo_from": "https://kojipkgs.fedoraproject.org/pub/fedora/linux/releases/26/Everything/$arch/os/",
########	    "ostree_repo": "/mnt/koji/compose/atomic/26/",
########	    'failable': ['*'],
########	}
########    }),
########]

########ostree_installer = [
########    ("^Atomic$", {
########	"x86_64": {
########	    "repo": [ "Everything" ],
#########                     "https://kojipkgs.fedoraproject.org/pub/fedora/linux/releases/26/Everything/$arch/os/"],
########	    "release": None,
########	    "rootfs_size": "3",
########	    "installpkgs": ["fedora-productimg-atomic"],
########	    "rootfs_size": "3",
########	    "add_template": ["ostree-based-installer/lorax-configure-repo.tmpl",
########			     "ostree-based-installer/lorax-embed-repo.tmpl"],
########	    "add_template_var": [
########		"ostree_install_repo=https://kojipkgs.stg.fedoraproject.org/compose/atomic/26/",
########		"ostree_update_repo=https://kojipkgs.fedoraproject.org/atomic/26/",
########		"ostree_osname=fedora-atomic",
########		"ostree_install_ref=fedora/26/x86_64/atomic-host",
########		"ostree_update_ref=fedora/26/x86_64/atomic-host",
########	    ],
########	    'template_repo': 'https://pagure.io/fedora-lorax-templates.git',
########	    'template_branch': 'f26',
########	}
########    })
########]
koji_profile = 'bodhi_koji'
#koji_profile = 'compose_koji'
link_type = 'symlink'
